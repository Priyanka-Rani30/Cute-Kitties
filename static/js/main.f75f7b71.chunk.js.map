{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAAe,I,wBCIFA,EAAK,SAACC,GAChB,OAAQ,sBAAKC,UAAU,iBAAf,UACJ,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJbC,EAAS,SAACR,GACrB,OAAQ,qBAAKC,UAAU,YAAf,SACHD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJZM,G,MAAU,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aACjC,OAAO,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAC5DG,SAAUF,MCgCCG,E,kDA5Bb,aAAc,IAAD,8BACb,gBACKC,MAAM,CACTR,SAAS,GACTS,YAAY,IAJD,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACf,SAASc,S,oBAGvC,WAAS,IAAD,OACN,EAAgCE,KAAKR,MAA7BR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YACZQ,EAAiBjB,EAASkB,QAC9B,SAAAvB,GAAO,OAAEA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAC7D,OACE,sBAAK3B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAYW,YAAY,kBACxBC,aAAc,SAACiB,GAAK,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WACxD,cAAC,EAAD,CAAUvB,SAAUS,EAAYQ,EAAiBjB,W,GAxBrCwB,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f75f7b71.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\n\nimport './card.styles.css';\n\nexport const Card=(props)=>{\n   return( <div className='card-container'>\n       <img alt=\"monsters\" src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`}/>\n        <h1>{props.monster.name}</h1>\n        <p>{props.monster.email}</p>\n    </div>)\n}","import React from 'react';\nimport './card-list.styles.css';\nimport {Card} from './../card/card.component'\n\nexport const CardList=(props)=>{\n  return (<div className='card-list'>\n      {props.monsters.map(monster=>\n      <Card key={monster.id} monster={monster}/>)}\n      </div>)\n}","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox=({placeholder,handleChange})=>{\n    return(<input className='search' type='search' placeholder={placeholder} \n    onChange={handleChange} />)\n}","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n//COMPONENTS\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends Component{\n  constructor(){\n  super();\n  this.state={\n    monsters:[],\n    searchField:''\n   }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}))\n  }\n\n  render(){\n    const { monsters, searchField}= this.state;\n    const filteredMonsters=monsters.filter(\n      monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()));\n  return (\n    <div className=\"App\" >\n      <h1>Monster Rolodex</h1>\n      <SearchBox  placeholder='search monsters' \n      handleChange={(e)=>{this.setState({searchField:e.target.value})}} />\n      <CardList monsters={searchField?filteredMonsters:monsters}/>\n    </div>)\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}